# Generated by Django 5.1.1 on 2025-01-22 17:22

import datetime
import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id_commune', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='DFP',
            fields=[
                ('id_dfp', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DRANEF',
            fields=[
                ('id_dranef', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Forest',
            fields=[
                ('id_forest', models.AutoField(primary_key=True, serialize=False)),
                ('forest_name', models.CharField(max_length=255)),
                ('loc_name', models.CharField(max_length=255)),
                ('superficie', models.DecimalField(decimal_places=3, max_digits=12)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('num_canton', models.IntegerField(blank=True, null=True)),
                ('num_parcel', models.IntegerField(blank=True, null=True)),
                ('titre_fonci', models.CharField(blank=True, max_length=255, null=True)),
                ('for_format', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id_province', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id_region', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='ShapefileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('shapefile', models.FileField(upload_to='shapefiles/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shpss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('file', models.FileField(upload_to='%Y/%m/%d')),
                ('date', models.DateField(blank=True, default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id_species', models.AutoField(primary_key=True, serialize=False)),
                ('sci_name', models.CharField(blank=True, max_length=255)),
                ('vernac_name', models.CharField(blank=True, max_length=255, null=True)),
                ('french_name', models.CharField(blank=True, max_length=255, null=True)),
                ('spp_descript', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DPANEF',
            fields=[
                ('id_dpanef', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('dranef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.dranef')),
            ],
        ),
        migrations.CreateModel(
            name='Canton',
            fields=[
                ('id_canton', models.AutoField(primary_key=True, serialize=False)),
                ('canton_name', models.CharField(max_length=255)),
                ('superficie', models.DecimalField(decimal_places=3, max_digits=12)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('number_groupe', models.IntegerField(blank=True, null=True)),
                ('forest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.forest')),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id_groupe', models.AutoField(primary_key=True, serialize=False)),
                ('groupe_name', models.CharField(max_length=255, null=True)),
                ('superficie', models.DecimalField(decimal_places=3, max_digits=12)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('parcel_num', models.IntegerField(blank=True, null=True)),
                ('canton', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.canton')),
                ('forest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.forest')),
            ],
            options={
                'db_table': 'groupe',
            },
        ),
        migrations.CreateModel(
            name='Parcelle',
            fields=[
                ('id_parcel', models.AutoField(db_column='id_parcel', primary_key=True, serialize=False)),
                ('parcelle', models.CharField(db_column='parcelle', max_length=255)),
                ('superficie', models.DecimalField(blank=True, db_column='superficie', decimal_places=3, max_digits=12, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(blank=True, db_column='geometry', null=True, srid=4326)),
                ('location', models.CharField(blank=True, db_column='location', max_length=255, null=True)),
                ('commune_id', models.ForeignKey(blank=True, db_column='commune_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.commune')),
                ('dfp_id', models.ForeignKey(blank=True, db_column='dfp_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.dfp')),
                ('groupe_id', models.ForeignKey(blank=True, db_column='groupe_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.groupe')),
            ],
        ),
        migrations.CreateModel(
            name='ParcelSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_species', models.IntegerField(blank=True, null=True)),
                ('vol_total', models.FloatField(blank=True, null=True)),
                ('num_total', models.IntegerField(blank=True, null=True)),
                ('parcelle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='globeportal.parcelle')),
                ('sci_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='globeportal.species')),
            ],
        ),
        migrations.CreateModel(
            name='EspeceInventaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circonf', models.FloatField(blank=True, null=True)),
                ('num_arbre', models.IntegerField(blank=True, null=True)),
                ('hauteur', models.FloatField(blank=True, null=True)),
                ('vol_arbre', models.FloatField(blank=True, null=True)),
                ('id_parcspp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.parcelspecies')),
            ],
        ),
        migrations.CreateModel(
            name='PointCloudMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('responsable', models.CharField(blank=True, max_length=255, null=True)),
                ('threeD_mod', models.URLField(blank=True, null=True)),
                ('id_parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.parcelle')),
            ],
        ),
        migrations.AddField(
            model_name='commune',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.province'),
        ),
        migrations.AddField(
            model_name='province',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.region'),
        ),
        migrations.CreateModel(
            name='ZDTF',
            fields=[
                ('id_zdtf', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('dpanef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.dpanef')),
            ],
        ),
        migrations.AddField(
            model_name='dfp',
            name='zdtf',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='globeportal.zdtf'),
        ),
    ]
